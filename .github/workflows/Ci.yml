name: Netlify CMC Pipeline

on:
  push:
    branches: [main]
  pull_request:

env:
  NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
  NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}

jobs:
  # Этап 1: CI/CD (Build & Deploy на Netlify)
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

      - name: Build project
        run: npm install && npm run build
      

      - name: Deploy to Netlify
        uses: jsmrcaga/action-netlify-deploy@master
        with:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          NETLIFY_DEPLOY_MESSAGE: "Prod deploy v${{ github.ref }}"
          NETLIFY_DEPLOY_TO_PROD: true



  # Этап 2: SAST (статический анализ)
  sast:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Snyk ass
        uses: snyk/actions/setup@master
      - name: Snyk Test
        run: snyk test
        continue-on-error: true
        env:
           SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  # Этап 3: DAST (динамический анализ)
  dast:
    runs-on: ubuntu-latest
    steps:
      - name: OWASP ZAP Scan
        uses: zaproxy/action-full-scan@v0.10.0
        with:
          target: ${{ steps.deploy.outputs.deploy-url || 'https://tiny-nougat-be6b83.netlify.app' }}

  # Этап 4: Security Checks (секреты и конфиги)
  security-checks:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Scan for secrets
        uses: gitleaks/gitleaks-action@v2

